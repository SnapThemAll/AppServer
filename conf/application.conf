# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "%APPLICATION_SECRET%"

play {

  # Registers the request handler
  # ~~~~~
  http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

  # Security Filter Configuration - Content Security Policy
  filters.headers {
    contentSecurityPolicy = "default-src 'self';"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' clef.io cdnjs.cloudflare.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
    contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" frame-src clef.io;"
  }

  # The application DI modules
  # ~~~~~
  modules.enabled += "modules.BaseModule"
  modules.enabled += "modules.JobModule"
  modules.enabled += "modules.SilhouetteModule"

  modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
  modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

}

# Akka config
akka {
  loglevel = "ERROR"
  jvm-exit-on-fatal-error = off
}

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

mongo {
  server = "localhost"
  database = "steepup"

  test {
    server = "localhost"
    database = "steepuptest"
  }

  prod {
    server = "mongo"
    database = "steepup"
  }
}

jobs.tokencleaner.interval = 1 hour

include "silhouette.conf"